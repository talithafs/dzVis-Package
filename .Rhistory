}
file.copy(wamp,dzvis,recursive=TRUE)
if(run){
require(opencpu)
if(!is.null(opencpu$url())){
opencpu$restart()
}
opencpu$browse("/library/dzVis/www")
}
}
opencpu$url()
updateFrontEnd()
rm(list=lm())
rm(list=ls())
updateFrontEnd(0
updateFrontEnd()
updateFrontEnd <- function(run = TRUE){
wamp <- "C:\\Users\\Talitha\\Dropbox\\Economia\\Projeto Final\\R Package\\dzVis\\www\\"
dzvis <- "C:\\Users\\Talitha\\Documents\\R\\win-library\\3.2\\dzVis\\"
www <- paste(dzvis, "\\www", sep="")
if(file.exists(www)) {
unlink(www, recursive = TRUE)
}
file.copy(wamp,dzvis,recursive=TRUE)
if(run){
require(opencpu)
if(!is.null(opencpu$url())){
opencpu$restart()
}
opencpu$browse("/library/dzVis/www")
}
}
updateFrontEnd()
opencpu$url()
unload(opencpu)
opencpu.start()
opencpu$start()
updateFrontEnd()
updateFrontEnd <- function(run = TRUE){
wamp <- "C:\\Users\\Talitha\\Dropbox\\Economia\\Projeto Final\\R Package\\dzVis\\www\\"
dzvis <- "C:\\Users\\Talitha\\Documents\\R\\win-library\\3.2\\dzVis\\"
www <- paste(dzvis, "\\www", sep="")
if(file.exists(www)) {
unlink(www, recursive = TRUE)
}
file.copy(wamp,dzvis,recursive=TRUE)
if(run){
run()
}
}
rebuild <- function(run = TRUE, install = TRUE){
wamp <- "C:\\Users\\Talitha\\Dropbox\\Economia\\Projeto Final\\R Package\\dzVis\\www\\"
dzvis <- "C:\\Users\\Talitha\\Documents\\R\\win-library\\3.2\\dzVis\\"
www <- paste(dzvis, "\\www", sep="")
if(file.exists(www)) {
unlink(www, recursive = TRUE)
}
require(devtools)
devtools::build()
if(install){
devtools::install()
}
file.copy(wamp,dzvis,recursive=TRUE)
if(run){
run()
}
}
run <- function(){
require(opencpu)
if(!is.null(opencpu$url())){
opencpu$restart()
}
opencpu$browse("/library/dzVis/www")
}
run()
rebuild()
run()
rebuild()
getAttributeValues("total_por_mil", "pea_idade", 15)
data <- getAttributeValues("total_por_mil", "pea_idade", 15)
library(jsonlite)
jdata <- toJSON(data)
jdata
data <- getAttributeValues("tipo_area", "pea_idade", 15)
data
jdata <- toJSON(data)
jdata
rebuild()
updateFrontEnd()
run()
rebuild(run = F)
updateFrontEnd()
?toJSOn
?toJSON
updateFrontEnd()
rebuild()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
run()
updateFrontEnd()
updateFrontEnd()
obj = getAttributeValues("tipo_area", "pea_sexo", 10)
obj
json <- toJSON(obj)
json
updateFrontEnd()
rebuild()
roxygen2::roxygenise()
rebuild()
run()
updateFrontEnd()
rebuild(run = FALSE)
rebuild(run = FALSE)
getAttributeValues("tipo_area", "pea_idade", 15)
rebuild(run = FALSE)
obj <- getAttributeValues("tipo_area", "pea_idade", 15)
write(obj, "new.json")
write(obj, "new.json")
obj
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
?jsonlite
rebuild
rebuild()
getAttributeValues("tipo_area", "pea_idade", 10)
updateFrontEnd()
getAttributeValues <- function(attribute, table, nvalues){
connection <- connect()
query <- paste("select", attribute, "from", table, "limit", nvalues, ";")
data <- DBI::dbGetQuery(connection, query)
disconnect(connection)
list(values = as.list(data[,1]))
data[,1]
}
getAttributeValues("tipo_area", "pea_idade", 10)
getAttributeValues <- function(attribute, table, nvalues){
connection <- connect()
query <- paste("select", attribute, "from", table, "limit", nvalues, ";")
data <- DBI::dbGetQuery(connection, query)
disconnect(connection)
list(values = data[,1])
}
getAttributeValues("tipo_area", "pea_idade", 10)
roxygen2::roxygenise()
rebuild()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
getAttributeValues("pea_idade", "mes", 10)
getAttributeValues("mes", "pea_idade", 10)
vec = [1,2,3]
vec = c(1,2,3)
list(values = vec)
rebuild
rebuild()
rebuild()
getAttributeValues("mes", "pea_idade", 10)
getAttributeValues <- function(attribute, table, nvalues){
connection <- connect()
query <- paste("select", attribute, "from", table, "limit", nvalues, ";")
data <- DBI::dbGetQuery(connection, query)
disconnect(connection)
list(values = c(data[,1]))
}
getAttributeValues("mes", "pea_idade", 10)
rebuild()
rebuild()
roxygen2::roxygenise()
roxygen2::roxygenise()
rebuild()
getAttributeValues("tipo_area", "pea_idade", 10)
rebuild()
roxygen2::roxygenise()
rebuild()
getAttributeValues("tipo_area", "pea_idade", 10)
rebuild()
getAttributeValues("tipo_area", "pea_idade", 10)
roxygen2::roxygenise()
rebuild()
getAttributeValues("tipo_area", "pea_idade", 10)
rebuild()
getAttributeValues("tipo_area", "pea_idade", 10)
getAttributeValues <- function(attribute, table, nvalues){
connection <- connect()
query <- paste("select", attribute, "from", table, "limit", nvalues, ";")
data <- DBI::dbGetQuery(connection, query)
disconnect(connection)
json <- toJSON(list(values = data[,1]))
con <- file("temp.json", encoding="utf8")
write(json,file = con)
}
getAttributeValues("tipo_area", "pea_idade", 10)
rebuild()
updateFrontEnd()
rebuild()
rebuild()
getAttributeValues("tipo_area", "pea_idade", 10)
rebuild9
rebuild()
rebuild()
rebuild()
rebuild()
opencpu$browse("/library/markdownapp/www")
roxygen2::roxygenise()
rebuild()
rebuild()
rebuild()
build()
rebuild()
getAttributeValues("mes", "pea_idade", 10)
temp
file <- getAttributeValues("mes", "pea_idade", 10)
file
rebuild()
rebuild()
rebuild()
rebuild()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
rebuild()
updateFrontEnd()
rebuild()
rebuild()
updateFrontEnd()
roxygen2::roxygenise()
roxygen2::roxygenise()
rebulid(run = F)
rebuild(run = F)
getAttributeValues("tipo_area", "pea_idade", 15)
roxygen2::roxygenize()
rebuild(run = F)
getAttributeValues("tipo_area", "pea_idade", 15)
a <- getAttributeValues("tipo_area", "pea_idade", 15)
a
rebuild(run = F)
a <- getAttributeValues("tipo_area", "pea_idade", 15)
a
rebuild(run = F)
rebuild(run = F, install = F)
getAttributeValues("tipo_area", "pea_idade", 15)
createJSONFile(list(c(1,2,3)))
l = list(c(1,2,3))
class(l)
rebuild(run = F, install = F)
getAttributeValues("tipo_area", "pea_idade", 15)
createJSONFile(list(c(1,2,3)))
rebuild(run = F)
createJSONFile(list(c(1,2,3)))
getAttributeValues("tipo_area", "pea_idade", 15)
createJSONFile(list(c(1,2,3)))
getAttributeValues("tipo_area", "pea_idade", 15)
rebuild(run = F)
getAttributeValues("tipo_area", "pea_idade", 15)
rebuild(run = F)
getAttributeValues("tipo_area", "pea_idade", 15)
rebuild(run = F)
getAttributeValues("tipo_area", "pea_idade", 15)
roxygen2::roxygenise()
rebuild(run = F)
getAttributeValues("tipo_area", "pea_idade", 15)
?createJSONFile
?createJSONFile
rebuild(run = F)
getAttributeValues("tipo_area", "pea_idade", 15)
rebuild()
getAttributeValues("tipo_area", "pea_idade", 15)
conn <- connect()
dbGetQuery(conn, "select sexo from pea_sexo limit 10")
library(DBI)
dbGetQuery(conn, "select sexo from pea_sexo limit 10")
data <- dbGetQuery(conn, "select sexo from pea_sexo limit 10")
create(list(values = data[,1]), "attributes.json")
createJSONFile(list(values = data[,1]), "attributes.json")
getAttributeValues <- function(attribute, table, nvalues){
filename <- "attributes.json"
connection <- connect()
query <- paste("select", attribute, "from", table, "limit", nvalues, ";")
data <- DBI::dbGetQuery(connection, query)
disconnect(connection)
createJSONFile(list(values = data[,1]), filename)
}
getAttributeValues("tipo_area", "pea_idade", 15)
getAttributeValues <- function(attribute, table, nvalues){
filename <- "attributes.json"
connection <- connect()
query <- paste("select", attribute, "from", table, "limit", nvalues, ";")
data <- DBI::dbGetQuery(connection, query)
disconnect(connection)
if(createJSONFile(list(values = data[,1]), filename) == TRUE) {
return(filename)
}
return("Erro")
}
getAttributeValues("tipo_area", "pea_idade", 15)
rebuild(run = F)
getAttributeValues("tipo_area", "pea_idade", 15)
rebuild()
?dzVis
library(dzVis)
?createJSONFile
?dzVis
roxygen2::roxygenise()
rebuild()
?getAttributeValues
?getAttributeValues
?getAttributeValues
library(dzVis)
updateFrontEnd <- function(run = TRUE){
wamp <- "C:\\Users\\Talitha\\Dropbox\\Economia\\Projeto Final\\R Package\\dzVis\\www\\"
dzvis <- "C:\\Users\\Talitha\\Documents\\R\\win-library\\3.2\\dzVis\\"
www <- paste(dzvis, "\\www", sep="")
if(file.exists(www)) {
unlink(www, recursive = TRUE)
}
file.copy(wamp,dzvis,recursive=TRUE)
if(run){
run()
}
}
rebuild <- function(run = TRUE, install = TRUE){
wamp <- "C:\\Users\\Talitha\\Dropbox\\Economia\\Projeto Final\\R Package\\dzVis\\www\\"
dzvis <- "C:\\Users\\Talitha\\Documents\\R\\win-library\\3.2\\dzVis\\"
www <- paste(dzvis, "\\www", sep="")
if(file.exists(www)) {
unlink(www, recursive = TRUE)
}
require(devtools)
devtools::build()
if(install){
devtools::install()
}
file.copy(wamp,dzvis,recursive=TRUE)
if(run){
run()
}
}
run <- function(){
require(opencpu)
if(!is.null(opencpu$url())){
opencpu$restart()
}
opencpu$browse("/library/dzVis/www")
}
library(dzVis)
?createJSONFile
roxygen2::roxygenise()
rebuild9
rebuild()
?createJSONFile
?createJSONFile
restart()
opencpu$stop()
?createJSONFile
roxygen2::roxygenise()
roxygen2::roxygenise()
rebuild(run = F)
?createJSONFile
?createJSONFile
?dzVis
library(dzVis)
?dzVis
getwd
getwd()
?createJSONData
?createJSONFile
library(dzVis)
?createJSONFile
run()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
run()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
conn <- connect()
library(dzVis)
conn <- connect()
updateFrontEnd()
getAttributeValues("sexo", "pea_idade", 4)
getAttributeValues("idade", "pea_idade", 4)
getAttributeValues("grupo_idade", "pea_idade", 4)
disconnect()
disconnect(conn)
conn <- connect()
disconnect(conn)
getAttributeValues("grupo_idade", "pea_idade", 4)
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
updateFrontEnd()
rebuild()
install.packages("DBI")
install.packages("RMySQL")
install.packages("googleVis")
rebuild()
install.packages("opencpu")
rebuild()
install.packages("opencpu")
rebuild()
install.packages("opencpu")
rebuild()
getwd()
