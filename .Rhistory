}
}
stop("Parameter 'data' is not valid. It should be a data.frame or a character.");
}
validateLimits("pea_por_sexo", "total_por_mil", min, max)
head(data)
validateTargetVariable(data,"percentual_ativas")
validateTargetVariable(data,"tipo_area")
validateTargetVariable <- function(data, targetVar){
if(is.character(data)){
type = getDataTypes(data, targetVar)[,"ctype"]
return(type == "int" || type == "double")
}
else if(is.data.frame(data)){
return(is.numeric(data[,targetVar]))
}
stop("Parameter 'data' is not valid. It should be a data.frame or a character.")
}
validateTargetVariable(data,"tipo_area")
validateTargetVariable(data,"percentual_total")
validateTargetVariable(data,"mes")
validateTargetVariable("pea_por_sexo","mes")
validateTargetVariable("pea_por_sexo","percentual_total")
validateTimeVariable <- function(data, timeVar){
if(is.character(data)){
type = getDataTypes(data, targetVar)[,"ctype"]
return(type == "int" || type == "date" || type == "datetime")
}
else if(is.data.frame(data)){
return(is.integer(data[,targetVar]) || class(data[,targetVar]) == "Date")
}
stop("Parameter 'data' is not valid. It should be a data.frame or a character.")
#x%%1==0
#all.equal(a, as.integer(a))
#return(TRUE);
}
validateTimeVariable(data,"mes")
source('C:/Users/Talitha/Dropbox/Economia/Projeto Final/R Package/dzVis/R/validateTimeVariable.R')
validateTimeVariable(data,"mes")
validateTimeVariable(data,"tipo_area")
validateTimeVariable(data,"percentual_total")
is.integer(data[,"percentual_total"])
data[,"percentual_total"]
head(data)
data[,5] <- dbGetQuery(connect(), "select total_por_mil from pea_por_sexo")
head(data)
names(data)[5] <- "teste"
validateTimeVariable(data,"teste")
paste("*",collapse = ", ")
con <- connect()
library(dzVis)
con <- connect()
library(roxygen2)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(dzVis)
con <- connect()
roxygen2::roxygenise()
library(dzVis)
con <- connect()
library(dzVis)
con <- connect()
library(dzVis)
con <- connect()
library(dzVis)
con <- connect()
?pasteLimitRestrictions
?validateConsistency
data <- dbGetQuery(con, "select tipo_area, percentual_total from pea_por_sexo")
col <- "tipo_area"
fac <- "Total das áreas"
head(data[col == fac,])
head(data[,col == fac])
head(data[col == fac,"percentual_total"])
head(data["percentual_total",col == fac])
head(data[,data[,col] == fac])
head(data[data[,col] == fac],)
data[,col]
data[,col == fac]
fac
data[,data[,col] == fac]
data[data[,col] == fac,]
data[data[,col] == fac,"percentual_total"]
data <- dbGetQuery(con, "select tipo_area, percentual_total, mes from pea_por_sexo")
data[data[,col] == fac,"mes"]
unique(data[,"mes"])
data <- dbGetQuery(con, "select tipo_area, percentual_total, mes from pea_por_sexo where sexo = 'Homem'")
unique(data[,"mes"])
length(unique(data[,"mes"]))
length(data[data[,"tipo_area"] == "Total das áreas","mes"])
vec1 <- unique(data[,"mes"])
vec2 <- data[data[,"tipo_area"] == "Total das áreas","mes"]
identical(vec1,vec2)
vec1 <- sort(vec1, decreasing = TRUE)
identical(vec1,vec2)
vec1
vec1 <- sort(vec1, decreasing = FALSE)
vec1 <- sort(vec1, decreasing = FALSE)
identical(vec1,vec2)
library(dzVis)
data <- dbGetQuery(con, "select tipo_area, percentual_total, mes from pea_por_sexo where sexo = 'Homem'")
con <- connect()
data <- dbGetQuery(con, "select tipo_area, percentual_total, mes from pea_por_sexo where sexo = 'Homem'")
validateConsistency(data, "mes", "tipo_area", "percentual_total")
data <- importData("pea_por_sexo", t(as.matrix(c("mes", "tipo_area", "percentual_total"))),restrictions = t(as.matrix(c("sexo","Homem"))))
?importData
?importData
roxygenise()
library(roxygen2)
roxygenise()
library(dzVis)
roxygenise()
library(dzVis)
?pasteLimitRestrictions
library(dzVis)
roxygenise()
library(dzVis)
data <- importData("pea_por_sexo", t(as.matrix(c("mes", "tipo_area", "percentual_total"))),restrictions = t(as.matrix(c("sexo","Homem"))))
?importData
cols <- t(as.matrix(c("mes","tipo_area","percentual_total")))
cols
cols <- c("mes","tipo_area","percentual_total")
restrictions = t(as.matrix(c("sexo","Homem")
restrictions = t(as.matrix(c("sexo","Homem"))
restrictions = t(as.matrix(c("sexo","Homem")))
restrictions
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
library(dzVis)
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
restrictions = t(as.matrix(c("sexo","Homem")))
cols <- c("mes","tipo_area","percentual_total")
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
restrictions = t(as.matrix(c("sexo","Homem")))
cols <- c("mes","tipo_area","percentual_total")
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
library(dzVis)
restrictions = t(as.matrix(c("sexo","Homem")))
cols <- c("mes","tipo_area","percentual_total")
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
restrictions = t(as.matrix(c("sexo","Homem")))
cols <- c("mes","tipo_area","percentual_total")
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
library(dzVis)
restrictions = t(as.matrix(c("sexo","Homem")))
cols <- c("mes","tipo_area","percentual_total")
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
library(dzVis)
restrictions = t(as.matrix(c("sexo","Homem")))
cols <- c("mes","tipo_area","percentual_total")
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
rm(list = ls())
library(dzVis)
restrictions = t(as.matrix(c("sexo","Homem")))
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
cols <- c("mes","tipo_area","percentual_total")
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
importData <- function(table, columns, restrictions = NULL, limits = NULL, connection = NULL){
conn <- connection
if(is.null(connection)){
conn <- connect()
}
cols <- paste(columns,collapse = ", ")
query <- paste("select",cols,"from",table)
if(!is.null(restrictions) && !is.null(limits)) {
query <- pasteIdRestrictions(query, restrictions)
query <- pasteLimitRestrictions(query, limits, whereClause = FALSE)
}
else if(!is.null(limits)) {
query <- pasteLimitRestrictions(query, limits)
}
else if(!is.null(restrictions)){
query <- pasteIdRestrictions(query, restrictions)
}
data <- dbGetQuery(conn, query)
types <- getDataTypes(table, columns, conn)
for(colName in names(data)){
type = types[types$cod == colName,2]
if(type == "enum"){
data[,colName] <- as.factor(data[,colName])
}
else if(type == "int"){
data[,colName] <- as.integer(data[,colName])
}
else if(type == "double"){
data[,colName] <- as.numeric(data[,colName])
}
else if(type == "date" || type == "datetime"){
data[,colName] <- as.Date(data[,colName])
}
else if(type == "varchar"){
data[,colName] <- as.character(data[,colName])
}
}
if(is.null(connection)) {
disconnect(conn)
}
return(data)
}
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
source('C:/Users/Talitha/Dropbox/Economia/Projeto Final/R Package/dzVis/R/pasteIdRestrictions.R')
source('C:/Users/Talitha/Dropbox/Economia/Projeto Final/R Package/dzVis/R/pasteLimitRestrictions.R')
source('C:/Users/Talitha/Dropbox/Economia/Projeto Final/R Package/dzVis/R/getDataTypes.R')
data <- importData("pea_por_sexo",cols,restrictions = restrictions)
data
validateConsistency(data, "mes", "tipo_area","percentual_total")
class(data$tipo_area)
names(data)
library(dzVis)
ls()
validateConsistency(data, "mes", "tipo_area","percentual_total")
library(dzVis)
validateConsistency(data, "mes", "tipo_area","percentual_total")
library(dzVis)
validateConsistency(data, "mes", "tipo_area","percentual_total")
validateConsistency(data, "tipo_area", "mes","percentual_total")
cols <- c("mes","grupo_idade","percentual_total")
restrictions = t(as.matrix(c("tipo_area","Total das áreas")))
data <- importData("pea_por_idade",cols,restrictions = restrictions)
head(data)
validateConsistency(data, "mes", "grupo_idade","percentual_total")
validateConsistency(data, "mes", "grupo_idade",c("percentual_total","grupo_idade"))
cols <- c("mes","grupo_idade","percentual_total","total_por_mil")
data <- importData("pea_por_idade",cols,restrictions = restrictions)
validateConsistency(data, "mes", NULL,c("percentual_total","total_por_mil"))
cols <- c("mes","percentual_total","total_por_mil")
data <- importData("pea_por_idade",cols,restrictions = restrictions)
validateConsistency(data, "mes", NULL,c("percentual_total","total_por_mil"))
head(data)
dados <- read.csv(file = "rais.csv", header = TRUE,sep=";")
dados <- read.csv(file = "C:\\Users\\Talitha\\Documents\\Projeto Final\\Código\\Tests\\rais.csv", header = TRUE,sep=";")
dados <- read.csv(file = "C:\\Users\\Talitha\\Documents\\Projeto Final\\Código\\Tests\\rais.csv", header = TRUE,sep=";")
dados <- read.csv(file = "C:\\Users\\Talitha\\Documents\\Projeto Final\\Código\\Tests\\rais.csv", header = TRUE,sep=";")
dados <- read.csv(file = "C:\\Users\\Talitha\\Documents\\Projeto Final\\Código\\Tests\\R\\rais.csv", header = TRUE,sep=";")
names(dados)[5] = "empregados 31 dez"
labor = gvisMotionChart(dados, idvar='n_area', timevar='ano', xvar="educ_ate_5a_serie", yvar="salario_real_medio", sizevar="vinculos")
library('googleVis')
labor = gvisMotionChart(dados, idvar='n_area', timevar='ano', xvar="educ_ate_5a_serie", yvar="salario_real_medio", sizevar="vinculos")
plot (labor)
str = print(labor, "chart")
print(labor, "chart")
library(dzVis)
rest <- matrix(ncol = 2, nrow = 2)
rest[1,] <- c("tipo_area","Total das áreas")
rest[2,] <- c("sexo", "Homem")
rest
rest <- c("sexo", "Homem")
createComboChart("pea_por_sexo","percentual_total","tipo_area", "mes", "2010-01-01", "2010-04-01")
createComboChart("pea_por_sexo","percentual_total","tipo_area", "mes", "2010-01-01", "2010-04-01",restrictions = rest)
createComboChart("pea_por_sexo","percentual_total","tipo_area", "mes", "2010-01-01", "2010-04-01",restrictions = t(as.matrix(rest)))
library(dzVis)
createComboChart("pea_por_sexo","percentual_total","tipo_area", "mes", "2010-01-01", "2010-04-01",restrictions = t(as.matrix(rest)))
library(dzVis)
rest
rest <- matrix(ncol = 2, nrow = 2)
rest[1,] <- c("sexo", "Homem")
rest[2,] <- c("tipo_area", "Total das áreas")
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil",NULL, "mes", "2010-01-01", "2010-04-01",restrictions = t(as.matrix(rest)))
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = t(as.matrix(rest)))
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = t(as.matrix(rest)))
rest
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = t(as.matrix(rest)))
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
data <- createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
head(data)
sort(unique(data[,"mes"]))
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_total","total_por_mil"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
library(dzVis)
getColumnAlias <- function(table, column, connection){
conn <- connection
if(is.null(connection)){
conn <- connect()
}
query <- paste("select alias from desc_",table," where cod = ",column)
alias <- dbGetQuery(conn, query)
if(is.null(connection)) {
disconnect(conn)
}
return(alias)
}
getColumnAlias("pea_por_sexo","tipo_area")
source('C:/Users/Talitha/Dropbox/Economia/Projeto Final/R Package/dzVis/R/getColumnAlias.R')
getColumnAlias("pea_por_sexo","tipo_area")
source('C:/Users/Talitha/Dropbox/Economia/Projeto Final/R Package/dzVis/R/getColumnAlias.R')
getColumnAlias("pea_por_sexo","tipo_area")
source('C:/Users/Talitha/Dropbox/Economia/Projeto Final/R Package/dzVis/R/getColumnAlias.R')
getColumnAlias("pea_por_sexo","tipo_area")
source('C:/Users/Talitha/Dropbox/Economia/Projeto Final/R Package/dzVis/R/getColumnAlias.R')
getColumnAlias("pea_por_sexo","tipo_area")
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
head(data)
data[,!(names(data) %in% "mes")]
newData <- as.data.frame(matrix(ncol = ncolumns, nrow = nrow(data)))
newData <- as.data.frame(matrix(ncol = ncol(data), nrow = nrow(data)))
newData[,1] <- data[,"mes"]
newData[,2] <- data[,!(names(data) %in% "mes")]
newData[,2] <- cbind(newData, data[,!(names(data) %in% "mes")])
newData[,2] <- rbind(newData, data[,!(names(data) %in% "mes")])
newData[,2] <- rbind(newData[,1], data[,!(names(data) %in% "mes")])
newData
dois <- data[,!(names(data) %in% "mes")]
um <- data[,"mes"]
newData <- as.data.frame(matrix(ncol = ncol(data), nrow = nrow(data)))
newData
newData <- rbind(um,dois)
newData
data
um
dois
um <- t(as.matrix(data[,"mes"]))
um
um <- as.matrix(data[,"mes"])
um
data
um <- data[,"mes"]
um
um <- as.data.frame(data[,"mes"])
um
newData <- rbind(um,dois)
newData <- cbind(um,dois)
newData
sm <- cbind(um,dois)
sm
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
for(index in 1:10){print(index)}
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(opencpu)
library(dzVis)
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
?googleVis
getOption("gvis.print.tag")
createComboChart("pea_por_sexo",c("percentual_nao_ativas","percentual_ativas", "percentual_total"),NULL, "mes", "2010-01-01", "2010-04-01",restrictions = rest)
library(googleVis)
M <- gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
gdgt <- createGoogleGadget(M)
cat(gdgt)
cl1 <- gvisCalendar(Cairo, datevar="Date", numvar="Temp")
plot(cl1)
cl4 <- gvisCalendar(Cairo, datevar="Date", numvar="Temp",
options=list(
title="Daily temperature in Cairo",
height=320,
calendar="{yearLabel: { fontName: 'Times-Roman',
fontSize: 32, color: '#1A8763', bold: true},
cellSize: 10,
cellColor: { stroke: 'red', strokeOpacity: 0.2 },
focusedCellColor: {stroke:'red'}}")
)
plot(cl4)
roxygen2::roxygenise()
library(dzVis)
grep(".htlm$","olaar.html")
grepl(".htlm$","olaar.html")
grepl(".html$","olaar.html")
?createJSONFile
?"googleVis"
grepl(".htm[l]$", "da.htm")
grepl(".htm[l]$", "da.html")
grepl(".htm[l]$", "da.htm")
grepl(".htm[l ]$", "da.htm")
grepl(".htm[l""]$", "da.htm")
grepl(".htm[l]$", "da.htm")
grepl(".htm{l}$", "da.htm")
grepl(".htm({l})$", "da.htm")
grepl(".html?$", "da.htm")
grepl(".html?$", "da.htg")
grepl("\\.html?$", "dahtml")
grepl("\\.html?$", "da.html")
grepl("\\.html?$", "da.htm")
?grep
gsub("\\.html?$", ".html", "dat")
gsub("\\.htm$", ".html", "dat.htm")
gsub("\\.htm$", ".html", "dathtm")
gsub("\\.htm$", ".html", "dat.html")
?gvisMotionChart
library(RMySQL)
library(zoo)
library(googleVis)
connection <- dbConnect(MySQL(), db="dzVis",  user = "dzvisuser", host = "Talitha-PC", port=3306)
dbGetQuery(connection, "show databases;")
dbGetQuery(connection, "describe pea_por_idade ;")
dbListTables(connection)
Sys.setlocale("LC_TIME","Portuguese_Brazil.1252")
dados <- dbReadTable(connection,"pea_por_idade")
dados$mes <- as.Date(as.yearmon(dados$mes))
dados <- dados[dados$tipo_area == "Total das áreas",]
labor = gvisMotionChart(dados, idvar='grupo_idade', timevar='mes', yvar="total_por_mil")
plot(labor)
labor = gvisMotionChart(dados, idvar='n_area', timevar='ano', xvar="educ_ate_5a_serie", yvar="salario_real_medio", sizevar="vinculos", date.format = "%Y")
labor = gvisMotionChart(dados, idvar='grupo_idade', timevar='mes', yvar="total_por_mil", date.format = "%Y")
plot(labor)
labor = gvisMotionChart(dados, idvar='grupo_idade', timevar='mes', yvar="total_por_mil", date.format = "%Y")
plot(labor)
roxygen2::roxygenise()
validateLimits("pea_por_sexo", "mes", "2010-01-01", "2010-02-01")
validateLimits("pea_por_sexo", "mes", "2010-01-01", "2010-02-01")
library(dzVis)
validateLimits("pea_por_sexo", "mes", as.Date("2010-01-01"), as.Date("2010-02-01"))
validateLimits("pea_por_sexo", "mes", as.Date("2009-01-01"), as.Date("2010-02-01"))
validateLimits("pea_por_sexo", "mes", as.Date("2009-01-01"), as.Date("2008-02-01"))
roxygen2::roxygenise()
library(dzVis)
library(dzVis)
mapChartVariables("pea_por_sexo", "sexo")
library(dzVis)
mapChartVariables("pea_por_sexo", "sexo")
library(dzVis)
mapChartVariables("pea_por_sexo", "sexo")
mapChartVariables("pea_por_sexo", c("sexo", "tipo_area", "mes", "pecentual_total"))
mapChartVariables("pea_por_sexo", c("sexo", "tipo_area", "mes", "percentual_total"))
?mapChartVariables
?validateConsistency
?validateKeys
validateKeys("pea_por_idade", c("grupo_idade"))
?validateConsistency
?importData
?validateKeys
?validateLimits
roxygen2::roxygenise()
library(dzVis)
restrictions
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", "2009-01-01", "2009-04-01", restrictions)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
library(dzVis)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
restrictions
library(dzVis)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
library(dzVis)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
library(dzVis)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
library(dzVis)
library(dzVis)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
library(dzVis)
library(dzVis)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
library(dzVis)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
library(dzVis)
library(dzVis)
library(dzVis)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
library(dzVis)
library(dzVis)
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", as.Date("2009-01-01"), as.Date("2009-04-01"), restrictions)
data
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", min = as.Date("2009-01-01"), max = as.Date("2009-04-01"), restrictions = restrictions)
data
class(restrictions)
library(dzVis)
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", min = as.Date("2009-01-01"), max = as.Date("2009-04-01"), restrictions = restrictions)
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", min = as.Date("2009-01-01"), max = as.Date("2009-04-01"), restrictions = restrictions)
?imporData
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", min = as.Date("2009-01-01"), max = as.Date("2009-04-01"), restrictions = restrictions)
library(dzVis)
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", min = as.Date("2009-01-01"), max = as.Date("2009-04-01"), restrictions = restrictions)
data
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", min = as.Date("2009-01-01"), max = as.Date("2009-04-01"), restrictions = restrictions)
library(dzVis)
data
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", min = "2009-01-01", max = "2009-04-01", restrictions = restrictions)
data
library(dzVis)
data <- createComboChart("teste", "pea_por_sexo", "percentual_ativas", "sexo", "mes", min = "2009-01-01", max = "2009-04-01", restrictions = restrictions)
data
library(dzVis)
?createComboChart
roxygen2::roxygenise()
library(dzVis)
?mapChartVariables
?createComboChart
